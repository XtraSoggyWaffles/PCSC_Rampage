class PlayerController : ZilchComponent
{
    function Initialize(init : CogInitializer)
    {
        Zero.Connect(this.Space, Events.LogicUpdate, this.OnLogicUpdate);
    }

   function OnLogicUpdate(event : UpdateEvent)
{
  var movement = Real3(0.0, 0.0, 0.0);

  // control left, right, and up
  if(Zero.Keyboard.KeyIsDown(Keys.A))
  {
    movement.X -= 1.0;
  }

  if(Zero.Keyboard.KeyIsDown(Keys.D))
  {
    movement.X += 1.0;
  }

  if(Zero.Keyboard.KeyIsPressed(Keys.Space))
  {
    this.Owner.SweptController.Jump();
  }

  // if the jump key is not pressed, find the point of release and stop jumping
  if(Zero.Keyboard.KeyIsDown(Keys.Up) == false)
  {
    if(this.Owner.SweptController.Jumping)
    {
      this.Owner.SweptController.JumpCancel();
    }
  }

  // at the end, update
  this.Owner.SweptController.Update(movement, event.Dt);
 }
}